---
name: CI CD

on:
  push:
    branches:
      - '**'
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+-?*'

jobs:

  test:
    name: Test

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node: [12, 14, 16]

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
      - name: Upgrade NPM
        run: |
          npm install -g npm
      - name: Node and NPM versions
        run: |
          node --version
          npm --version
      - run: npm ci
      - run: npm run lint
      - run: npm run type-check
      - run: sudo apt-get update && sudo apt-get install -y --no-install-recommends mediainfo
      - run: npm run test -- --ci --coverage --runInBand --reporters=default --reporters=jest-junit
        env:
          JEST_JUNIT_OUTPUT_NAME: 'reports/junit/results.xml'
      - run: npm run build
      - name: Archive test results
        uses: actions/upload-artifact@v2
        with:
          name: test-report
          path: reports/junit/results.xml
      - name: Upload codecoverage to Codacy (Node 14 only)
        if: matrix.node == 14
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: ./coverage/lcov.info
      - name: Upload codecoverage to Codecov (Node 14 only)
        run: |
          curl https://keybase.io/codecovsecurity/pgp_keys.asc | gpg --import # One-time step
          curl -Os https://uploader.codecov.io/latest/linux/codecov
          curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM
          curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM.sig
          gpg --verify codecov.SHA256SUM.sig codecov.SHA256SUM
          shasum -a 256 -c codecov.SHA256SUM
          chmod +x codecov
          ./codecov -t ${CODECOV_TOKEN}
        if: matrix.node == 14
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  publish:
    name: Publish

    if: startsWith(github.ref, 'refs/tags/v')

    needs: test

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node: [14]

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
          registry-url: 'https://registry.npmjs.org'
      - name: Upgrade NPM
        run: |
          npm install -g npm
      - name: Node and NPM versions
        run: |
          node --version
          npm --version
      - run: npm ci
      - run: npm run build
      - name: 'Patch oclif commands path in package.json'
        run: node ./bin/oclif-patch-package-json.js
      - name: Publish to NPM
        if: startsWith(github.ref, 'refs/tags/v') && !contains(github.ref, '-')
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Publish beta to NPM
        if: startsWith(github.ref, 'refs/tags/v') && contains(github.ref, '-')
        run: npm publish --tag=beta
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
