name: Node CI/CD

on: [push]

jobs:

  test:
    name: Test

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node: [10, 12]

    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      - name: Node and NPM versions
        run: |
          node --version
          npm --version
      - run: npm ci
      - run: npm run lint
      - run: npm run type-check
      - run: sudo apt-get update && sudo apt-get install -y --no-install-recommends mediainfo
      - run: npm run test -- --ci --coverage --runInBand --reporters=default --reporters=jest-junit
        env:
          JEST_JUNIT_OUTPUT_NAME: 'reports/junit/results.xml'
      - name: Upload codecoverage to Codacy (Node 12 only)
        run: cat ./coverage/lcov.info | ./node_modules/.bin/codacy-coverage
        if: matrix.node == 12
        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
      - name: Upload codecoverage to Codecov (Node 12 only)
        run: bash <(curl -s https://codecov.io/bash)
        if: matrix.node == 12
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  publish:
    name: Publish

    needs: test

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node: [12]

    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
          registry-url: 'https://registry.npmjs.org'
      - name: Node and NPM versions
        run: |
          node --version
          npm --version
      - run: npm ci
        if: startsWith(github.ref, 'refs/tags/v')
      - run: npm run build
        if: startsWith(github.ref, 'refs/tags/v')
      - name: Publish to NPM (Tags only)
        if: startsWith(github.ref, 'refs/tags/v')
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
